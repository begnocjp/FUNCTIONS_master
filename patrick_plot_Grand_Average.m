function patrick_plot_Grand_Average(wpms,name_i,condition,channel)


%load all subjects
for name_i = 1:length(wpms.names)
    load_subs{name_i} = load([wpms.dirs.CWD wpms.dirs.preproc wpms.names{name_i} '_TIMELOCK' condition.name '.mat']);
end


%make Grand Average
cfg = [];
cfg.channel        = condition.roi   %can toggle to select single/ groups of channels
%cfg.latency        = [begin end] in seconds or 'all' (default = 'all')
%cfg.normalizevar   = 'N' or 'N-1' (default = 'N-1')
cfg.method         = 'across' %(default) or 'within', see below.
%cfg.parameter      = string or cell-array indicating which
% parameter to average. default is set to
% 'avg', if it is present in the data


%compute GA for trial type 1
grandavg{1} = ft_timelockgrandaverage(cfg, ...
    load_subs{1,1}.timelock(1), ...
    load_subs{1,2}.timelock(1), ...
    load_subs{1,3}.timelock(1), ...
    load_subs{1,4}.timelock(1), ...
    load_subs{1,5}.timelock(1), ...  
    load_subs{1,6}.timelock(1), ...
    load_subs{1,7}.timelock(1), ...
    load_subs{1,8}.timelock(1), ...
    load_subs{1,9}.timelock(1), ...
    load_subs{1,10}.timelock(1), ...
    load_subs{1,11}.timelock(1), ...
    load_subs{1,12}.timelock(1), ...
    load_subs{1,13}.timelock(1), ...
    load_subs{1,14}.timelock(1), ...
    load_subs{1,15}.timelock(1), ...  
    load_subs{1,16}.timelock(1), ...
    load_subs{1,17}.timelock(1), ...
    load_subs{1,18}.timelock(1), ...
    load_subs{1,19}.timelock(1), ...
    load_subs{1,20}.timelock(1), ...
    load_subs{1,21}.timelock(1))






%compute GA for trial type 2
grandavg{2} = ft_timelockgrandaverage(cfg, ...
    load_subs{1,1}.timelock(2), ...
    load_subs{1,2}.timelock(2), ...
    load_subs{1,3}.timelock(2), ...
    load_subs{1,4}.timelock(2), ...
    load_subs{1,5}.timelock(2), ...  
    load_subs{1,6}.timelock(2), ...
    load_subs{1,7}.timelock(2), ...
    load_subs{1,8}.timelock(2), ...
    load_subs{1,9}.timelock(2), ...
    load_subs{1,10}.timelock(2), ...
    load_subs{1,11}.timelock(2), ...
    load_subs{1,12}.timelock(2), ...
    load_subs{1,13}.timelock(2), ...
    load_subs{1,14}.timelock(2), ...
    load_subs{1,15}.timelock(2), ...  
    load_subs{1,16}.timelock(2), ...
    load_subs{1,17}.timelock(2), ...
    load_subs{1,18}.timelock(2), ...
    load_subs{1,19}.timelock(2), ...
    load_subs{1,20}.timelock(2), ...
    load_subs{1,21}.timelock(2))


%compute GA for DIFF
grandavg{3} = ft_timelockgrandaverage(cfg, ...
    load_subs{1,1}.timelock(3), ...
    load_subs{1,2}.timelock(3), ...
    load_subs{1,3}.timelock(3), ...
    load_subs{1,4}.timelock(3), ...
    load_subs{1,5}.timelock(3), ...  
    load_subs{1,6}.timelock(3), ...
    load_subs{1,7}.timelock(3), ...
    load_subs{1,8}.timelock(3), ...
    load_subs{1,9}.timelock(3), ...
    load_subs{1,10}.timelock(3), ...
    load_subs{1,11}.timelock(3), ...
    load_subs{1,12}.timelock(3), ...
    load_subs{1,13}.timelock(3), ...
    load_subs{1,14}.timelock(3), ...
    load_subs{1,15}.timelock(3), ...  
    load_subs{1,16}.timelock(3), ...
    load_subs{1,17}.timelock(3), ...
    load_subs{1,18}.timelock(3), ...
    load_subs{1,19}.timelock(3), ...
    load_subs{1,20}.timelock(3), ...
    load_subs{1,21}.timelock(3))

%set GA variables to corresponding conditions so that ft_multiplot will
%label ERPs

if  1 == strcmp(condition.name,'_gonogo')
    nogo =  grandavg{1}
    go   =  grandavg{2}
    diff        =  grandavg{3}
elseif 1 == strcmp(condition.name,'_stroop')
    inc        = grandavg{1}
    c          = grandavg{2}
    diff       = grandavg{3}
elseif 1 == strcmp(condition.name,'_incidental')
    sing    = grandavg{1}
    rept    = grandavg{2}
    diff      = grandavg{3}
end

save([wpms.dirs.CWD wpms.dirs.TIMELOCK 'GRANDAVERAGE' condition.time condition.name condition.chan '.mat'],'grandavg','-v7.3');

%make GA ERP plots according to condition 

cfg = [];
cfg.showlabels    = 'yes';
cfg.fontsize      = 6;
cfg.linecolor     = 'bgr'
cfg.layout        = '/Users/patrick/Desktop/nCCR_Cancer_EEG/FUNCTIONS/GSN-HydroCel-256.sfp';
%cfg.ylim = [-3e-13 3e-13];

if 1 == strcmp(condition.name,'_gonogo')
   ft_multiplotER(cfg, nogo,go,diff);
    
 elseif 1 == strcmp(condition.name,'_stroop')
     ft_multiplotER(cfg, inc,c,diff);
     
 elseif 1 == strcmp(condition.name,'_incidental')
   ft_multiplotER(cfg, sing,rept,diff);
%    

    
end
end

