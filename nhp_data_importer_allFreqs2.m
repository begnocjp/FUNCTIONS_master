%% Import data from text file.
% Script for importing data from the following text file:
%
%    E:\NHP Study\8140__30mpk_VU595_NHP Parietal EEG Relative Power.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/11/07 13:26:12

%% Initialize variables.
% filename = 'E:\NHP Study\8140__30mpk_VU595_NHP Parietal EEG Relative Power.csv';
delimiter = ',';
startRow = 3;

CWD = 'E:\NHP Study\';
% names = {'8140_Veh_VU595_NHP Parietal EEG Relative Power'};
names = {'8112_3mpk Donepezil_NHP Parietal EEG Relative Power','8112_5.6mpk Donepezil_NHP Parietal EEG Relative Power',...
'8112 _10mpk Donepezil_NHP Parietal EEG Relative Power','8112_BL1_NHP Parietal EEG Relative Power',...
'8112_BL2_NHP Parietal EEG Relative Power','8112_BL3_NHP Parietal EEG Relative Power',...
'8140__3mpk_VU595_NHP Parietal EEG Relative Power','8140__10mpk_VU595_NHP Parietal EEG Relative Power'...
'8140__30mpk_VU595_NHP Parietal EEG Relative Power'};


for name_i = 1:length(names)
    name = names{name_i};
    filename = [CWD name '.csv'];

%% Format string for each line of text:
% For more information, see the TEXTSCAN documentation.


formatSpec = '%q%q%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'EmptyValue' ,0.0,'HeaderLines' ,startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
dataArray([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105]) = cellfun(@(x) num2cell(x), dataArray([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105]), 'UniformOutput', false);

mpkVU595NHPParietalEEGRelativePower = [dataArray{1:end-1}];

       dates{1} = datetime(dataArray{1}, 'Format', 'HH:mm:ss', 'InputFormat', 'HH:mm:ss');
  
        try
            % Handle dates surrounded by quotes
            dataArray{1} = cellfun(@(x) x(2:end-1), dataArray{1}, 'UniformOutput', false);
            dates{1} = datetime(dataArray{1}, 'Format', 'HH:mm:ss', 'InputFormat', 'HH:mm:ss');
        catch
            dates{1} = repmat(datetime([NaN NaN NaN]), size(dataArray{1}));
        end
   
    
    anyBlankDates = cellfun(@isempty, dataArray{1});
    anyInvalidDates = isnan(dates{1}.Hour) - anyBlankDates;
    
    % Create non-numeric struct variables
    Power = [];
    Power.date = dates(:,1);
    Power.alertness = dataArray(:,2);
    Power.activity = dataArray(:,3);
%% Clear temporary variables

clearvars filename delimiter startRow formatSpec fileID dataArray ans;


end